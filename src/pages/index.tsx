import { Grid, Skeleton } from "@mantine/core";
import { PrismaClient } from "@prisma/client";
import { InferGetStaticPropsType } from "next";
import Head from "next/head";
import { useEffect } from "react";
import HomeCard from "../components/HomeCard";
import { categoryStore } from "../store/store";
import { trpc } from "../utils/trpc";

const Home = ({
  categories,
}: InferGetStaticPropsType<typeof getStaticProps>) => {
  const { setSelectedCategory } = categoryStore();
  useEffect(() => {
    setSelectedCategory(categories[0] ?? ({} as any));
  }, []);

  const selectedCategory = categoryStore((state) => state.selectedCategory);

  const { data, isLoading } = trpc.home.getHomesByCategoryId.useQuery({
    categoryId: selectedCategory.id,
  });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="">
        <Skeleton visible={isLoading}>
          <Grid>
            {data?.map((home) => {
              return (
                <Grid.Col span={3}>
                  <HomeCard
                    price={home.price}
                    city={home.city}
                    country={home.country}
                    image={home.image}
                    key={home.id}
                  ></HomeCard>
                </Grid.Col>
              );
            })}
          </Grid>
        </Skeleton>
      </main>
    </>
  );
};

export async function getStaticProps(context: any) {
  const prisma = new PrismaClient();

  const categories = await prisma.category.findMany();

  return {
    props: {
      categories: categories,
    },
  };
}

export default Home;
